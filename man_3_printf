.TH _PRINTF 3 "19 April 2022" "1" "_printf Manual"

.SH NAME
_printf() \- The _printf function echoes the functionality of printf().

.SH SYNOPSIS
.B _printf

.B #include "main.h"

.B int _printf(const char [\fI*format\fR]
.B ...)

.SH DESCRIPTION
.B _printf()
The function in _printf() writes output according to the following descriptions below.

.B Return Value
.RS 3
Upon successful return, you will see the number of characters printed as stdout (excluding the null byte to end output to strings).
Upon an error a negative number is returned.
.RE

.B format of the format string
.RS 3
The format string is a character string, beginning and ending in order of input values assigned and composed of zero or more directives:
By default, the arguments are used in the order given.
.RE

.B The conversion specifier
.RS 3
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:

.B d, i
.RS 6
The \fIint\fR argument is converted to signed deciaml notation.
.RE

.B c
.RS 6
The \fIint\fR argument is converted to an unsigned char, and the resulting character is written.
.RE

.B s
.RS 6
The \fIconst char *\fR argument is a pointer to an array of character type (pointer to string). Characters from the array are written up to
(but not including) a terminating null byte ('\0').
.RE

.B %
.RS 6
A '%' is written. no argument is converted. '%%' types '%' as though it was an escape the next character.
.RE

.SH NOTES
The program doesn't account for flags, fields, precision, or length modifiers.

.SH EXAMPLE
.RS 3
to print a sentence with conversion specifiers:

.RS 8
#include "holberton.h"

_printf("The %s jumped out tree and landed on all %d paws", "cat", 4);
.RE

.RS 3
Output: "The cat jumped out the tree and landed on all 4 paws"
.RE

.SH SEE ALSO
.B printf(3)

.SH AUTHOR
Ramon Britton, Lehlohonolo Lehoko
